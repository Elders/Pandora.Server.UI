@model ConfigurationDTO

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="modal fade" id="clusterModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Add Cluster</h4>
            </div>
            <div class="modal-body">

                <form action="" method="post">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="applicationName">Cluster Name: </label>
                                <input type="text" name="clusterName" id="clusterName" class="form-control" required />
                            </div>
                            <div class="form-group">
                                <input class="btn btn-success" type="submit" name="submit" value="Add" />
                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="modal fade" id="defaultsModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" id="defaultsModalClose" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title">Add Default Setting</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="applicationName">Setting Name: </label>
                            <input type="text" id="settingName" class="form-control" />
                        </div>
                        <div class="form-group">
                            <label for="applicationName">Setting Value: </label>
                            <input type="text" id="settingValue" class="form-control" />
                        </div>
                        <div class="form-group">
                            <a href="#" class="btn btn-success" onclick="addDefaultValue()">Add</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="row">
    <div class="row">
        <div class="col-lg-12">
            <div class="form-group">
                <h2>@Model.ApplicationName</h2>
            </div>
        </div>
    </div>
    <hr />
    <div class="col-md-9">
        <form action="@(HttpContextAccessor.HttpContext.Request.Path)/Defaults" method="post" class="col-md-12">
            <div class="row">
                <h4 class="pull-left">Defaults</h4>
            </div>
            <div class="row">
                @if (ReferenceEquals(null, Model.Defaults.Settings) == false)
                {
                    <div class="table-responsive">
                        <table id="defaults-table" class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Key</th>
                                    <th>Value</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (var i = 0; i < Model.Defaults.Settings.Count; ++i)
                                {
                                    @Html.EditorFor(x => x.Defaults.Settings[i],
                                        "SettingEditor",
                                        new
                                        {
                                            index = i,
                                            IsDisabled = Model.Defaults.Application.Access.HasAccess(Access.WriteAccess) ? string.Empty : "disabled"
                                        })
                                }
                            </tbody>
                        </table>

                        @if (Model.Defaults.Application.Access.HasAccess(Access.WriteAccess))
                        {
                            <a class="pull-left btn btn-primary btn-circle" href="#" data-toggle="modal" data-target="#defaultsModal">
                                Add new
                            </a>
                        }
                    </div>
                }
            </div>
            <hr />
            @if (Model.Defaults.Application.Access.HasAccess(Access.WriteAccess))
            {
                <input class="btn btn-success row" type="submit" name="submit" value="Save" />
            }
        </form>
    </div>

    <div class="col-sm-3 pull-right">
        <div class="row">
            <h4 class="pull-left">Clusters</h4>
        </div>

        @if (ReferenceEquals(null, Model.Clusters) == false)
        {
            <div class="row list-group">
                @foreach (var cluster in Model.Clusters)
                {
                    <a class="list-group-item" href="~/Projects/@(Model.ProjectName)/@(Model.ApplicationName)/@(cluster.Cluster.Name)/Machines">
                        @cluster.Cluster.Name
                    </a>
                }
            </div>
        }

        @if (Model.Defaults.Application.Access.HasAccess(Access.WriteAccess))
        {
            <a class="row btn btn-primary btn-circle" href="#" data-toggle="modal" data-target="#clusterModal">
                Add new
            </a>
        }
    </div>
</div>

<script type="text/javascript">

    function addDefaultValue() {
        var settingName = $('#settingName').val();
        var settingValue = $('#settingValue').val();

        if (settingName && settingValue) {

            var currentIndex = $("#defaults-table tbody tr").length;
            var html = '';
            $.get("/Clusters/GetSettingRow", {
                key: settingName,
                value: settingValue,
                index: currentIndex
            }, function (data, status) {
                if (status === 'success') {
                    $("#defaults-table tbody tr").last().after(data);
                }

                $('#defaultsModalClose').click();
                $('#settingName').val('');
                $('#settingValue').val('');
            });
        }
    }

    function editDefaultValue(key) {

        $('#setting-row-' + key + ' .edit').hide();
        //$('#setting-row-' + key + ' .delete').hide();
        $('#setting-row-' + key + ' .save').show();
        $('#setting-row-' + key + ' .cancel').show();

        $('span.setting-key-' + key).addClass('hidden');
        $('input.setting-key-' + key).removeClass('hidden');

        $('span.setting-value-' + key).addClass('hidden');
        $('input.setting-value-' + key).removeClass('hidden');

        var settingKey = $('span.setting-key-' + key).text();
        $('input.setting-key-' + key).val(settingKey);

        var settingValue = $('span.setting-value-' + key).text();
        $('input.setting-value-' + key).val(settingValue);
    }

    function saveChanges(key) {

        $('#setting-row-' + key + ' .edit').show();
        //$('#setting-row-' + key + ' .delete').show();
        $('#setting-row-' + key + ' .save').hide();
        $('#setting-row-' + key + ' .cancel').hide();

        $('span.setting-key-' + key).removeClass('hidden');
        $('input.setting-key-' + key).addClass('hidden');

        $('span.setting-value-' + key).removeClass('hidden');
        $('input.setting-value-' + key).addClass('hidden');

        var settingKey = $('input.setting-key-' + key).val();
        if (settingKey) {
            $('span.setting-key-' + key).text(settingKey);
        }

        var settingValue = $('input.setting-value-' + key).val();
        if (settingValue) {
            $('span.setting-value-' + key).text(settingValue);
        }
    }

    function cancelEdit(key) {

        $('#setting-row-' + key + ' .edit').show();
        //$('#setting-row-' + key + ' .delete').show();
        $('#setting-row-' + key + ' .save').hide();
        $('#setting-row-' + key + ' .cancel').hide();

        $('span.setting-key-' + key).removeClass('hidden');
        $('input.setting-key-' + key).addClass('hidden');

        $('span.setting-value-' + key).removeClass('hidden');
        $('input.setting-value-' + key).addClass('hidden');
    }

</script>